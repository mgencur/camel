<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-itest-jdg</artifactId>
        <version>2.15.1-redhat-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>camel-itest-jdg-fuse</artifactId>
    <name>Camel :: Integration Tests :: JDG/Fuse</name>
    <description>Performs OSGi compliance integration tests with JDG in Fuse</description>

    <properties>
        <maven.repo.local>${user.home}/.m2/repository</maven.repo.local>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>bndlib</artifactId>
                    <groupId>biz.aQute.bnd</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-aether</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-mvn</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-wrap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.osgi</groupId>
            <artifactId>spring-osgi-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core-osgi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-infinispan</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-infinispan</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>sample-domain-definition</artifactId>
            <version>${protostream-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>sample-domain-implementation</artifactId>
            <version>${protostream-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${infinispan-version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <!-- generate dependencies versions -->
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>deploy-converter-factory</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.infinispan.server</groupId>
                                    <artifactId>infinispan-server-testsuite</artifactId>
                                    <classifier>tests</classifier>
                                    <version>${infinispan-version}</version>
                                    <outputDirectory>${jdg.home}/standalone/deployments</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Needs to be adjusted to proper jboss plugin version and enabled -->
            <!--<plugin>-->
                <!--<groupId>org.jboss.as.plugins</groupId>-->
                <!--<artifactId>jboss-as-maven-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>start-server</id>-->
                        <!--<phase>process-test-classes</phase>-->
                        <!--<goals>-->
                            <!--<goal>start</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<skip>${skipTests}</skip>-->
                            <!--<jbossHome>${jdg.home}</jbossHome>-->
                            <!--<jvmArgs>-Dinfinispan.accurate.bulk.ops=true</jvmArgs>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>configure-caches</id>-->
                        <!--<phase>process-test-classes</phase>-->
                        <!--<goals>-->
                            <!--<goal>execute-commands</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<executeCommands>-->
                                <!--<commands>-->
                                    <!--&lt;!&ndash; Separate cache for protobuf serialized objects. &ndash;&gt;-->
                                    <!--<command>/subsystem=infinispan/cache-container=local/local-cache=remote_query:add(start=EAGER)</command>-->
                                    <!--&lt;!&ndash; Separate cache for converter factory which uses Int keys &ndash;&gt;-->
                                    <!--<command>/subsystem=infinispan/cache-container=local/local-cache=static_converter_factory:add(start=EAGER)</command>-->
                                <!--</commands>-->
                            <!--</executeCommands>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>stop-server</id>-->
                        <!--<phase>prepare-package</phase>-->
                        <!--<goals>-->
                            <!--<goal>shutdown</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<skip>${skipTests}</skip>-->
                            <!--<jbossHome>${jdg.home}</jbossHome>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <org.ops4j.pax.url.mvn.localRepository>${maven.repo.local}</org.ops4j.pax.url.mvn.localRepository>
                        <infinispan.accurate.bulk.ops>true</infinispan.accurate.bulk.ops>
                        <resources.dir>${project.build.directory}/test-classes</resources.dir>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
