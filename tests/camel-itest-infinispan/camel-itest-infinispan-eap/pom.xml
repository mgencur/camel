<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-itest-infinispan</artifactId>
        <version>2.15.1-redhat-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>camel-itest-infinispan-eap</artifactId>
    <name>Camel :: Integration Tests :: JDG/EAP</name>
    <description>Performs integration tests with Infinispan in EAP</description>

    <properties>
        <jvm.memory.args>-Xmx512m -XX:MaxPermSize=512m</jvm.memory.args>
        <default.transport.stack>udp</default.transport.stack>
        <transport.stack>-Djboss.default.jgroups.stack=${default.transport.stack}</transport.stack>
        <jvm.ip.stack>-Djava.net.preferIPv4Stack=true</jvm.ip.stack>
        <server.jvm.args>${jvm.ip.stack} ${jvm.memory.args} ${transport.stack}</server.jvm.args>
        <datagrid.slot>ispn-8.3</datagrid.slot>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-infinispan</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-infinispan</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
       <dependency>
           <groupId>org.infinispan</groupId>
           <artifactId>infinispan-embedded</artifactId>
           <scope>test</scope>
       </dependency>
       <dependency>
           <groupId>org.infinispan</groupId>
           <artifactId>infinispan-remote</artifactId>
           <scope>test</scope>
       </dependency>
       <dependency>
           <groupId>org.infinispan.protostream</groupId>
           <artifactId>sample-domain-definition</artifactId>
           <version>${protostream-version}</version>
           <scope>test</scope>
       </dependency>
       <dependency>
           <groupId>org.infinispan.protostream</groupId>
           <artifactId>sample-domain-implementation</artifactId>
           <version>${protostream-version}</version>
           <scope>test</scope>
       </dependency>
       <dependency>
           <groupId>org.infinispan.server</groupId>
           <artifactId>infinispan-server-testsuite</artifactId>
           <classifier>tests</classifier>
           <version>${infinispan-version}</version>
           <exclusions>
               <exclusion>
                   <groupId>org.infinispan</groupId>
                   <artifactId>infinispan-core</artifactId>
               </exclusion>
           </exclusions>
       </dependency>
       <dependency>
           <groupId>javax.cache</groupId>
           <artifactId>cache-api</artifactId>
       </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-test-libs</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <includeScope>test</includeScope>
                            <outputDirectory>${project.build.directory}/test-libs</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-converter-factory</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.infinispan.server</groupId>
                                    <artifactId>infinispan-server-testsuite</artifactId>
                                    <classifier>tests</classifier>
                                    <version>${infinispan-version}</version>
                                    <outputDirectory>${jdg.home}/standalone/deployments</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.1.0.Alpha6</version>
                <executions>
                    <execution>
                        <id>start-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <jbossHome>${jdg.home}</jbossHome>
                            <javaOpts>
                                <javaOpt>-Djava.net.preferIPv4Stack=true</javaOpt>
                                <javaOpt>-Dinfinispan.accurate.bulk.ops=true</javaOpt>
                            </javaOpts>
                            <serverConfig>clustered.xml</serverConfig>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-server2</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <jbossHome>${jdg.home}</jbossHome>
                            <javaOpts>
                                <javaOpt>-Djboss.socket.binding.port-offset=200</javaOpt>
                                <javaOpt>-Dinfinispan.accurate.bulk.ops=true</javaOpt>
                                <javaOpt>-Djava.net.preferIPv4Stack=true</javaOpt>
                                <javaOpt>-Dorg.jboss.resolver.warning=true</javaOpt>
                                <javaOpt>-Djboss.node.name=clustered2</javaOpt>
                            </javaOpts>
                            <serverConfig>clustered.xml</serverConfig>
                            <port>10190</port>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-server2</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                        <configuration>
                            <port>10190</port>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-cache-on-jdg-server</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <tasks>
                                <exec executable="sh">
                                    <arg value="${project.basedir}/src/test/resources/setupcaches.sh"/>
                                    <arg value="${jdg.home}"/>
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>no-eap-modules</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>tests-camel-jbossdatagrid.failsafe</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>all-in-war</reportNameSuffix>
                                    <systemPropertyVariables>
                                        <arquillian.launch>EAP</arquillian.launch>
                                        <infinispan.accurate.bulk.ops>true</infinispan.accurate.bulk.ops>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>eap-modules</id>
            <activation>
                <property>
                    <name>eap.modules.library</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- EAP modules are not packed correctly: https://issues.jboss.org/browse/JDG-37 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-eap-modules</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <tasks>
                                        <copy todir="${eap.home}/modules/system/layers/base/" overwrite="true">
                                            <fileset dir="${eap.modules.library}/modules/" includes="**/*" />
                                        </copy>
                                        <copy todir="${eap.home}/modules/system/layers/base/" overwrite="true">
                                            <fileset dir="${eap.modules.hotrod}/modules/" includes="**/*" />
                                        </copy>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>tests-camel-jbossdatagrid-eap-modules.failsafe</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>eap-modules</reportNameSuffix>
                                    <systemPropertyVariables>
                                        <arquillian.launch>EAP</arquillian.launch>
                                        <infinispan.accurate.bulk.ops>true</infinispan.accurate.bulk.ops>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
